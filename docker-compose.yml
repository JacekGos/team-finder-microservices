version: '3'
services:

# database images
  postgres-event:
    container_name: postgres-event
    image: postgres
    volumes:
     - postgres_event:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: event
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always
    
  postgres-venue:
    container_name: postgres-venue
    image: postgis/postgis
    volumes:
     - postgres_venue:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: venue
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always
    
  postgres-user:
    container_name: postgres-user
    image: postgres
    volumes:
     - postgres_user:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always
    
# monitoring
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
      
# security
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - mysql_keycloak:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: ${KEYKCLOAK_USER}
      MYSQL_PASSWORD: ${KEYCLOAK_PASSWORD}

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: ${KEYKCLOAK_USER}
      DB_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYKCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - realms_keycloak:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
      
# services images
  discovery-server:
    image: jacekg11/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      
  api-gateway:
    image: jacekg11/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8000:8000"
    expose:
      - "8000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak
      
  event-core-service:
    image: jacekg11/event-core-service:latest
    pull_policy: always
    ports:
     - "8100-8199:8100"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway

      
  event-service:
    image: jacekg11/event-service:latest
    pull_policy: always
    ports:
      - "8200-8299:8200"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-event
      - discovery-server
      - api-gateway
     
  user-service:
    image: jacekg11/user-service:latest
    pull_policy: always
    ports:
      - "8300-8399:8300"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-user
      - discovery-server
      - api-gateway
      
  venue-service:
    image: jacekg11/venue-service:latest
    pull_policy: always
    ports:
     - "8400-8499:8400"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-venue
      - discovery-server
      - api-gateway
     
volumes:
   mysql_keycloak:
     external: true
   realms_keycloak:
     external: true
   postgres_event:
     external: true
   postgres_user:
     external: true
   postgres_venue:
     external: true
     